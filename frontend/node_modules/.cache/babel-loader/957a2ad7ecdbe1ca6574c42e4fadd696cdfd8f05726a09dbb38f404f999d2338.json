{"ast":null,"code":"var _jsxFileName = \"/Users/joeuntrecht/sleep-coach/frontend/src/pages/SleepDashboardHome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepDashboardHome = () => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [sleepData, setSleepData] = useState(null);\n  const fetchSleepData = async () => {\n    try {\n      // Dynamically construct the URL with query params\n      const response = await fetch(`http://localhost:5001/api/daily_sleep?start_date=${startDate}&end_date=${endDate}`);\n      console.log(startDate);\n      console.log(endDate);\n      console.log(1);\n      if (!response.ok) {\n        throw new Error('Failed to fetch sleep data');\n      }\n      const data = await response.json();\n      setSleepData(data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sleep Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSleepData,\n      children: \"Fetch Sleep Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), sleepData ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(sleepData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sleep data yet. Enter dates and click fetch.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SleepDashboardHome, \"H0LAQhA0Rvi8aaL8nGq03lLpQ2A=\");\n_c = SleepDashboardHome;\nexport default SleepDashboardHome;\nvar _c;\n$RefreshReg$(_c, \"SleepDashboardHome\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SleepDashboardHome","_s","startDate","setStartDate","endDate","setEndDate","sleepData","setSleepData","fetchSleepData","response","fetch","console","log","ok","Error","data","json","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/joeuntrecht/sleep-coach/frontend/src/pages/SleepDashboardHome.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SleepDashboardHome = () => {\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [sleepData, setSleepData] = useState(null);\n\n  const fetchSleepData = async () => {\n    try {\n      // Dynamically construct the URL with query params\n      const response = await fetch(`http://localhost:5001/api/daily_sleep?start_date=${startDate}&end_date=${endDate}`);\n      console.log(startDate)\n      console.log(endDate)\n      console.log(1)\n      if (!response.ok) {\n        throw new Error('Failed to fetch sleep data');\n      }\n      const data = await response.json();\n      setSleepData(data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Sleep Dashboard</h1>\n      <label>\n        Start Date:\n        <input\n          type=\"date\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </label>\n      <label>\n        End Date:\n        <input\n          type=\"date\"\n          value={endDate}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </label>\n      <button onClick={fetchSleepData}>Fetch Sleep Data</button>\n      {sleepData ? (\n        <pre>{JSON.stringify(sleepData, null, 2)}</pre>\n      ) : (\n        <p>No sleep data yet. Enter dates and click fetch.</p>\n      )}\n    </div>\n  );\n};\n\nexport default SleepDashboardHome;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}